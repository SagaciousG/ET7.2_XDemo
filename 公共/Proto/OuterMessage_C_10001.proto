//未整理协议
syntax = "proto3";
package ET;

//ResponseType BenchmarkResponse
message BenchmarkRequest // IRequest
{
  int32 RpcId = 90; 
}

message BenchmarkResponse // IResponse
{
  int32 RpcId = 90; 
  int32 Error = 91; 
  string Message = 92; 
}

//ResponseType M2C_ReloadResponse
message C2M_ReloadRequest // IRequest
{
  int32 RpcId = 90; 
  string Account = 1; 
  string Password = 2; 
}

//ResponseType M2C_TestALResponse
message C2M_TestALRequest // IActorLocationRequest
{
  int32 RpcId = 90; 
  string request = 1; 
}

//ResponseType M2C_TestRobotCaseALResponse
message C2M_TestRobotCaseALRequest // IActorLocationRequest
{
  int32 RpcId = 90; 
  int32 N = 1; 
}

//ResponseType GMALResponse
message GMALRequest // IUnitRequest
{
  int32 RpcId = 90; 
  string Code = 1; 
  string P1 = 2; 
  string P2 = 3; 
  string P3 = 4; 
}

message GMALResponse // IUnitResponse
{
  int32 RpcId = 90; 
  int32 Error = 91; 
  string Message = 92; 
}

message HttpGetRouterResponse
{
  repeated string Realms = 1; 
  repeated string Routers = 2; 
}

message M2C_ReloadResponse // IResponse
{
  int32 RpcId = 90; 
  int32 Error = 91; 
  string Message = 92; 
}

message M2C_StopAMessage // IActorMessage
{
  int32 Error = 1; 
  int64 Id = 2; 
  Unity.Mathematics.float3 Position = 3; 
  Unity.Mathematics.quaternion Rotation = 4; 
}

message M2C_TestALResponse // IActorLocationResponse
{
  int32 RpcId = 90; 
  int32 Error = 91; 
  string Message = 92; 
  string response = 1; 
}

message M2C_TestRobotCaseALResponse // IActorLocationResponse
{
  int32 RpcId = 90; 
  int32 Error = 91; 
  string Message = 92; 
  int32 N = 1; 
}

message MoveInfo
{
  repeated Unity.Mathematics.float3 Points = 1; 
  float A = 4; 
  float B = 5; 
  float C = 6; 
  float W = 7; 
  int32 TurnSpeed = 8; 
}

//ResponseType PingResponse
message PingRequest // IRequest
{
  int32 RpcId = 90; 
}

message PingResponse // IResponse
{
  int32 RpcId = 90; 
  int32 Error = 91; 
  string Message = 92; 
  int64 Time = 1; 
}

message RouterSync
{
  uint32 ConnectId = 1; 
  string Address = 2; 
}

message StopMoveALMessage // IUnitMessage
{
  int32 RpcId = 90; 
}

message UnitProto
{
  Unity.Mathematics.float3 Position = 1; 
  MoveInfo MoveInfo = 2; 
  Unity.Mathematics.float3 Forward = 3; 
  int32 GateWayId = 4; 
  int32 Map = 5; 
  SimpleUnit SimpleUnit = 6; 
  int32 NPCID = 7; 
  int32 MoveSpeed = 8; 
}

